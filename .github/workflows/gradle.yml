# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: iosSimulatorArm64Test
            os: macos-latest
#          - target: jvmTest
#            os: ubuntu-latest
#          - target: linuxX64Test
#            os: ubuntu-latest
          - target: testDebugUnitTest
            os: ubuntu-latest
#          - target: testReleaseUnitTest
#            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
#      this will run ios target tests in case the os is macos and target is iosEmulator
#      but it will run ./gradlew build in case of os ubuntu and target is android
      run: |
        if [ "${{ matrix.target }}" = "iosSimulatorArm64Test" ]; then
          # Add the command for iosSimulatorArm64Test
          echo "Running iosSimulatorArm64Test build"
          # Your command here
          ./gradlew iosSimulatorArm64Test 
        elif [ "${{ matrix.target }}" = "testDebugUnitTest" ]; then
          # Add the command for testDebugUnitTest
          echo "Running testDebugUnitTest build"
          ./gradlew build
        fi

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build
